version: '2'

services:
  nginx:
    image: nginx:alpine
    container_name: ${CONTAINER_PREFIX}-nginx
    restart: always
    ports:
      - ${LOCAL_HTTP_NGINX_PORT}:80
      - ${LOCAL_HTTPS_NGINX_PORT}:443
    working_dir: /var/www/html
    volumes:
      - ./api:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    links:
      - php
    networks:
      - app

  php:
    build: ./docker/php
    container_name: ${CONTAINER_PREFIX}-php
    restart: always
    volumes:
      - ./api:/var/www/html
    links: 
      - postgres
    environment:
      PHP_IDE_CONFIG: serverName=${XDEBUG_STORM_SERVER_NAME}
    networks: 
      - app

  node:
    build:
      context: ./api
      dockerfile: ../docker/node/Dockerfile
    container_name: ${CONTAINER_PREFIX}-node
    ports:
      - "3000:3000"
    restart: unless-stopped
    command: "npm run dev"
    working_dir: /var/www
    volumes:
      - ./api:/var/www
    networks:
      - app

  postgres:
    image: postgres:latest
    container_name: ${CONTAINER_PREFIX}-postgres
    ports: 
      - ${LOCAL_DB_PORT}:5432
    restart: always
    environment: 
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes: 
      - ${LOCAL_DB_DIR}:/var/lib/postgresql/data
    networks: 
      - app

  scheduler:
    build: ./docker/php
    container_name: ${CONTAINER_PREFIX}-scheduler
    restart: always
    depends_on:
      - php
    volumes:
      - ./api:/var/www/html
    entrypoint: [ "php", "artisan", "schedule:work" ]
    networks:
      - app

networks: 
  app:
    driver: bridge
    ipam: 
      driver: default
      config: 
        - subnet: 192.168.111.0/28